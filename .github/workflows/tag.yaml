---
name: tag-helm-chart-version

on:
  push:
    branches:
      - master

jobs:
  tag-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: Check if Chart.yaml has changed
        id: check_changes
        run: |
          if [ $(git rev-list --count HEAD) -eq 1 ]; then
            # First commit, always consider Chart.yaml as changed
            echo "Chart.yaml has changed"
            echo "changed=true" >> $GITHUB_ENV
          else
            if git diff --name-only HEAD^ HEAD | grep -q 'helm/Chart.yaml'; then
              echo "Chart.yaml has changed"
              echo "changed=true" >> $GITHUB_ENV
            else
              echo "Chart.yaml has not changed"
              echo "changed=false" >> $GITHUB_ENV
            fi
          fi

      - name: Extract version from Chart.yaml
        if: env.changed == 'true'
        id: extract_version
        run: |
          version=$(grep '^version:' helm/Chart.yaml | awk '{print $2}')
          echo "chart_version=v${version}" >> $GITHUB_ENV

      - name: Check if tag already exists
        if: env.changed == 'true'
        id: check_tag
        run: |
          if git ls-remote --tags origin | grep -q "refs/tags/${{ env.chart_version }}"; then
            echo "Tag ${{ env.chart_version }} already exists"
            echo "tag_exists=true" >> $GITHUB_ENV
          else
            echo "Tag ${{ env.chart_version }} does not exist"
            echo "tag_exists=false" >> $GITHUB_ENV
          fi

      - name: Create Git tag
        if: env.changed == 'true' && env.tag_exists == 'false'
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git tag ${{ env.chart_version }}
          git push origin ${{ env.chart_version }}

      - name: Trigger build-and-push-image workflow
        if: env.changed == 'true' && env.tag_exists == 'false'
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/build-and-push-image.yml/dispatches \
            -d '{"ref": "refs/tags/${{ env.chart_version }}"}'
